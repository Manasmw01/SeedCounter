Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1371 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1371: extern volatile unsigned char TRISB __attribute__((address(0x086)));
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1495
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1495: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1557
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1557: extern volatile unsigned char TRISE __attribute__((address(0x089)));
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"2083
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2083: extern volatile unsigned char ADCON1 __attribute__((address(0x09F)));
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"2571
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2571: extern volatile __bit RE0 __attribute__((address(0x48)));
[v _RE0 `Vb ~T0 @X0 0 e@72 ]
"2574
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2574: extern volatile __bit RE1 __attribute__((address(0x49)));
[v _RE1 `Vb ~T0 @X0 0 e@73 ]
"138 main.c
[; ;main.c: 138:     KEYPAD_Init(PC_0,PC_1,PC_2,PC_3,PA_0,PA_1,PA_2,PA_3);
[c E844 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 255 .. ]
[n E844 . PA_0 PA_1 PA_2 PA_3 PA_4 PA_5 PA_6 PA_7 PB_0 PB_1 PB_2 PB_3 PB_4 PB_5 PB_6 PB_7 PC_0 PC_1 PC_2 PC_3 PC_4 PC_5 PC_6 PC_7 PD_0 PD_1 PD_2 PD_3 PD_4 PD_5 PD_6 PD_7 PE_0 PE_1 PE_2 PE_3 PE_4 PE_5 PE_6 PE_7 P_NC  ]
"66 ./keypad.h
[; ;./keypad.h: 66: void KEYPAD_Init(
[v _KEYPAD_Init `(v ~T0 @X0 0 ef8`E844`E844`E844`E844`E844`E844`E844`E844 ]
"99 ./uart.h
[; ;./uart.h: 99: void UART_Init(uint32_t v_baudRate_u32);
[v _UART_Init `(v ~T0 @X0 0 ef1`ul ]
"1377 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1377:     struct {
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"1376
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1376: typedef union {
[u S56 `S57 1 ]
[n S56 . . ]
"1388
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1388: extern volatile TRISBbits_t TRISBbits __attribute__((address(0x086)));
[v _TRISBbits `VS56 ~T0 @X0 0 e@134 ]
"1257
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1257:     struct {
[s S52 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S52 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1265
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1265:     struct {
[s S53 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . PS0 PS1 PS2 ]
"1256
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1256: typedef union {
[u S51 `S52 1 `S53 1 ]
[n S51 . . . ]
"1271
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1271: extern volatile OPTION_REGbits_t OPTION_REGbits __attribute__((address(0x081)));
[v _OPTION_REGbits `VS51 ~T0 @X0 0 e@129 ]
"461
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 461:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"471
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 471:     struct {
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . TMR0IF . TMR0IE ]
"460
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 460: typedef union {
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"478
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 478: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"60
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 60: extern volatile unsigned char TMR0 __attribute__((address(0x001)));
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"65 ./keypad.h
[; ;./keypad.h: 65: uint8_t KEYPAD_GetKey();
[v _KEYPAD_GetKey `(uc ~T0 @X0 0 e? ]
"101 ./uart.h
[; ;./uart.h: 101: void UART_TxChar(char v_uartData_u8);
[v _UART_TxChar `(v ~T0 @X0 0 ef1`uc ]
"217 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 217: extern volatile unsigned char PORTB __attribute__((address(0x006)));
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"341
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 341: extern volatile unsigned char PORTD __attribute__((address(0x008)));
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"27 ./gpio.h
[; ;./gpio.h: 27: void GPIO_PinWrite(gpioPins_et enm_pinNumber, uint8_t var_pinValue_u8);
[v _GPIO_PinWrite `(v ~T0 @X0 0 ef2`E844`uc ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"10 main.c
[p x FOSC  =  HS         ]
"11
[p x WDTE  =  OFF         ]
"12
[p x PWRTE  =  OFF       ]
"13
[p x CP  =  OFF          ]
"14
[p x BOREN  =  ON        ]
"15
[p x LVP  =  OFF          ]
"16
[p x CPD  =  OFF         ]
"17
[p x WRT  =  ON          ]
"55 C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"219
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 219: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"281
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 281: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"343
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 343: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"405
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 405: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"437
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 437: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"457
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 457: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"535
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 535: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"597
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 597: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"630
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 630: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"637
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 637: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"644
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 644: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"651
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 651: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"728
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 728: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"735
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 735: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"806
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 806: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"813
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 813: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"883
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 883: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"890
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 890: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"897
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 897: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"904
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 904: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"962
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 962: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1057
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1057: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1064
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1064: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1071
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1071: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1078
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1078: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1085
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1085: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1092
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1092: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1150
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1150: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1157
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1157: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1253
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1253: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1323
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1323: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1373
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1373: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1435
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1435: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1497
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1497: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1559
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1559: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1616
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1616: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1678
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1678: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1711
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1711: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1745
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1745: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1807
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1807: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1814
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1814: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1821
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1821: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1990
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 1990: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2071
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2071: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2078
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2078: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2085
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2085: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2138
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2138: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2145
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2145: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2152
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2152: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2159: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2166
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2166: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2211
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f874.h: 2211: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"85 main.c
[; ;main.c: 85: unsigned long cnt=0,set_cnt=0;
[v _cnt `ul ~T0 @X0 1 e ]
[i _cnt
-> -> -> 0 `i `l `ul
]
[v _set_cnt `ul ~T0 @X0 1 e ]
[i _set_cnt
-> -> -> 0 `i `l `ul
]
"86
[; ;main.c: 86: unsigned int timer0_cnt,seg_blink_cnt,seg_set;
[v _timer0_cnt `ui ~T0 @X0 1 e ]
[v _seg_blink_cnt `ui ~T0 @X0 1 e ]
[v _seg_set `ui ~T0 @X0 1 e ]
"87
[; ;main.c: 87: uint8_t RegValue,get_key_f,counter_mode1,counter_mode2,setval_mode,blink_seg_f;
[v _RegValue `uc ~T0 @X0 1 e ]
[v _get_key_f `uc ~T0 @X0 1 e ]
[v _counter_mode1 `uc ~T0 @X0 1 e ]
[v _counter_mode2 `uc ~T0 @X0 1 e ]
[v _setval_mode `uc ~T0 @X0 1 e ]
[v _blink_seg_f `uc ~T0 @X0 1 e ]
"89
[; ;main.c: 89: void DELAY_ms1(unsigned int ms_Count)
[v _DELAY_ms1 `(v ~T0 @X0 1 ef1`ui ]
"90
[; ;main.c: 90: {
{
[e :U _DELAY_ms1 ]
"89
[; ;main.c: 89: void DELAY_ms1(unsigned int ms_Count)
[v _ms_Count `ui ~T0 @X0 1 r1 ]
"90
[; ;main.c: 90: {
[f ]
"91
[; ;main.c: 91:     unsigned int i, j;
[v _i `ui ~T0 @X0 1 a ]
[v _j `ui ~T0 @X0 1 a ]
"92
[; ;main.c: 92:     for (i = 0; i < ms_Count; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 94  ]
[e :U 91 ]
"93
[; ;main.c: 93:     {
{
"94
[; ;main.c: 94:         for (j = 0; j < 100; j++);
{
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 100 `i `ui 95  ]
[e $U 96  ]
[e :U 95 ]
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 100 `i `ui 95  ]
[e :U 96 ]
}
"95
[; ;main.c: 95:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 94 ]
[e $ < _i _ms_Count 91  ]
[e :U 92 ]
}
"96
[; ;main.c: 96: }
[e :UE 90 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"118
[; ;main.c: 118: int main() {
[v _main `(i ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
[v F940 `uc ~T0 @X0 -> 10 `i s ]
[i F940
:U ..
"120
[; ;main.c: 120:      char seg_code[] = {0x02,0x9f,0x25,0x0d,0x99,0x49,0x41,0x1f,0x01,0x09};
-> -> 2 `i `uc
-> -> 159 `i `uc
-> -> 37 `i `uc
-> -> 13 `i `uc
-> -> 153 `i `uc
-> -> 73 `i `uc
-> -> 65 `i `uc
-> -> 31 `i `uc
-> -> 1 `i `uc
-> -> 9 `i `uc
..
]
[v _seg_code `uc ~T0 @X0 -> 10 `i a ]
[e = _seg_code F940 ]
"121
[; ;main.c: 121:     int temp,i,j;
[v _temp `i ~T0 @X0 1 a ]
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
"122
[; ;main.c: 122:     unsigned long num;
[v _num `ul ~T0 @X0 1 a ]
"123
[; ;main.c: 123:     unsigned char key,status=0;
[v _key `uc ~T0 @X0 1 a ]
[v _status `uc ~T0 @X0 1 a ]
[e = _status -> -> 0 `i `uc ]
"128
[; ;main.c: 128:     TRISB = 0x00;
[e = _TRISB -> -> 0 `i `uc ]
"129
[; ;main.c: 129:     TRISD = 0x00;
[e = _TRISD -> -> 0 `i `uc ]
"130
[; ;main.c: 130:     TRISE = 0x00;
[e = _TRISE -> -> 0 `i `uc ]
"131
[; ;main.c: 131:     ADCON1 = 0x06;
[e = _ADCON1 -> -> 6 `i `uc ]
"133
[; ;main.c: 133:     RE0=0;
[e = _RE0 -> -> 0 `i `b ]
"134
[; ;main.c: 134:     RE1=0;
[e = _RE1 -> -> 0 `i `b ]
"138
[; ;main.c: 138:     KEYPAD_Init(PC_0,PC_1,PC_2,PC_3,PA_0,PA_1,PA_2,PA_3);
[e ( _KEYPAD_Init (4 , , , , , , , . `E844 16 . `E844 17 . `E844 18 . `E844 19 . `E844 0 . `E844 1 . `E844 2 . `E844 3 ]
"141
[; ;main.c: 141:     UART_Init(9600);
[e ( _UART_Init (1 -> -> -> 9600 `i `l `ul ]
"142
[; ;main.c: 142:     DELAY_ms1(10);
[e ( _DELAY_ms1 (1 -> -> 10 `i `ui ]
"144
[; ;main.c: 144:     TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"145
[; ;main.c: 145:     OPTION_REGbits.INTEDG=0;
[e = . . _OPTION_REGbits 0 4 -> -> 0 `i `uc ]
"146
[; ;main.c: 146:     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"150
[; ;main.c: 150:     OPTION_REGbits.PS0=1;
[e = . . _OPTION_REGbits 1 0 -> -> 1 `i `uc ]
"151
[; ;main.c: 151:     OPTION_REGbits.PS1=1;
[e = . . _OPTION_REGbits 1 1 -> -> 1 `i `uc ]
"152
[; ;main.c: 152:     OPTION_REGbits.PS2=1;
[e = . . _OPTION_REGbits 1 2 -> -> 1 `i `uc ]
"153
[; ;main.c: 153:     OPTION_REGbits.PSA=0;
[e = . . _OPTION_REGbits 0 1 -> -> 0 `i `uc ]
"154
[; ;main.c: 154:     OPTION_REGbits.T0CS=0;
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
"155
[; ;main.c: 155:     INTCONbits.PEIE=1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"156
[; ;main.c: 156:     INTCONbits.T0IE=1;
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"157
[; ;main.c: 157:     TMR0=100;
[e = _TMR0 -> -> 100 `i `uc ]
"163
[; ;main.c: 163:     INTCONbits.GIE=1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"164
[; ;main.c: 164:     while (1)
[e :U 100 ]
"165
[; ;main.c: 165:     {
{
"170
[; ;main.c: 170:         if(counter_mode1==0&&counter_mode2==0)
[e $ ! && == -> _counter_mode1 `i -> 0 `i == -> _counter_mode2 `i -> 0 `i 102  ]
"171
[; ;main.c: 171:         {
{
"172
[; ;main.c: 172:             while(1)
[e :U 104 ]
"173
[; ;main.c: 173:             {
{
"174
[; ;main.c: 174:                 if(get_key_f==1)
[e $ ! == -> _get_key_f `i -> 1 `i 106  ]
"175
[; ;main.c: 175:                 {
{
"176
[; ;main.c: 176:                     key = KEYPAD_GetKey();
[e = _key ( _KEYPAD_GetKey ..  ]
"177
[; ;main.c: 177:                     get_key_f=0;
[e = _get_key_f -> -> 0 `i `uc ]
"178
[; ;main.c: 178:                     if((key>=0x30&&key<=0x39)||(key>=0x41&&key<=0x46))
[e $ ! || && >= -> _key `i -> 48 `i <= -> _key `i -> 57 `i && >= -> _key `i -> 65 `i <= -> _key `i -> 70 `i 107  ]
"179
[; ;main.c: 179:                     {
{
"180
[; ;main.c: 180:                         UART_TxChar(key);
[e ( _UART_TxChar (1 -> _key `uc ]
"181
[; ;main.c: 181:                         UART_TxChar('\r');
[e ( _UART_TxChar (1 -> -> 13 `ui `uc ]
"182
[; ;main.c: 182:                         UART_TxChar('\n');
[e ( _UART_TxChar (1 -> -> 10 `ui `uc ]
"183
[; ;main.c: 183:                     }
}
[e :U 107 ]
"184
[; ;main.c: 184:                 }
}
[e :U 106 ]
"201
[; ;main.c: 201:                 num = cnt;
[e = _num _cnt ]
"202
[; ;main.c: 202:                 temp = num / 10000;
[e = _temp -> / _num -> -> -> 10000 `i `l `ul `i ]
"203
[; ;main.c: 203:                 num = num % 10000;
[e = _num % _num -> -> -> 10000 `i `l `ul ]
"204
[; ;main.c: 204:                 PORTB = 0x02;
[e = _PORTB -> -> 2 `i `uc ]
"205
[; ;main.c: 205:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"206
[; ;main.c: 206:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"208
[; ;main.c: 208:                 temp = num / 1000;
[e = _temp -> / _num -> -> -> 1000 `i `l `ul `i ]
"209
[; ;main.c: 209:                 num = num % 1000;
[e = _num % _num -> -> -> 1000 `i `l `ul ]
"210
[; ;main.c: 210:                 PORTB = 0x04;
[e = _PORTB -> -> 4 `i `uc ]
"211
[; ;main.c: 211:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"212
[; ;main.c: 212:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"214
[; ;main.c: 214:                 temp = num / 100;
[e = _temp -> / _num -> -> -> 100 `i `l `ul `i ]
"215
[; ;main.c: 215:                 num = num % 100;
[e = _num % _num -> -> -> 100 `i `l `ul ]
"216
[; ;main.c: 216:                 PORTB = 0x08;
[e = _PORTB -> -> 8 `i `uc ]
"217
[; ;main.c: 217:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"218
[; ;main.c: 218:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"220
[; ;main.c: 220:                 temp = num / 10;
[e = _temp -> / _num -> -> -> 10 `i `l `ul `i ]
"221
[; ;main.c: 221:                 PORTB = 0x10;
[e = _PORTB -> -> 16 `i `uc ]
"222
[; ;main.c: 222:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"223
[; ;main.c: 223:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"225
[; ;main.c: 225:                 temp = num % 10;
[e = _temp -> % _num -> -> -> 10 `i `l `ul `i ]
"226
[; ;main.c: 226:                 PORTB = 0x20;
[e = _PORTB -> -> 32 `i `uc ]
"227
[; ;main.c: 227:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"228
[; ;main.c: 228:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"229
[; ;main.c: 229:                 if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 108  ]
"230
[; ;main.c: 230:                 {
{
"231
[; ;main.c: 231:                     TRISBbits.TRISB0 =1;
[e = . . _TRISBbits 0 0 -> -> 1 `i `uc ]
"232
[; ;main.c: 232:                     INTCONbits.INTE=1;
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
"233
[; ;main.c: 233:                     cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"234
[; ;main.c: 234:                     RE1=1;
[e = _RE1 -> -> 1 `i `b ]
"235
[; ;main.c: 235:                     RE0=1;
[e = _RE0 -> -> 1 `i `b ]
"236
[; ;main.c: 236:                     counter_mode1=1;
[e = _counter_mode1 -> -> 1 `i `uc ]
"237
[; ;main.c: 237:                     break;
[e $U 105  ]
"238
[; ;main.c: 238:                 }
}
[e :U 108 ]
"239
[; ;main.c: 239:                 if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 109  ]
"240
[; ;main.c: 240:                 {
{
"241
[; ;main.c: 241:                     TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"242
[; ;main.c: 242:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"243
[; ;main.c: 243:                     cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"244
[; ;main.c: 244:                     GPIO_PinWrite(RE0,0x01u);
[e ( _GPIO_PinWrite (2 , -> _RE0 `E844 -> -> 1 `ui `uc ]
"245
[; ;main.c: 245:                     GPIO_PinWrite(RE1,0x01u);
[e ( _GPIO_PinWrite (2 , -> _RE1 `E844 -> -> 1 `ui `uc ]
"246
[; ;main.c: 246:                     setval_mode=1;
[e = _setval_mode -> -> 1 `i `uc ]
"247
[; ;main.c: 247:                     seg_set=1;
[e = _seg_set -> -> 1 `i `ui ]
"248
[; ;main.c: 248:                     break;
[e $U 105  ]
"249
[; ;main.c: 249:                 }
}
[e :U 109 ]
"250
[; ;main.c: 250:             }
}
[e :U 103 ]
[e $U 104  ]
[e :U 105 ]
"251
[; ;main.c: 251:         }
}
[e :U 102 ]
"253
[; ;main.c: 253:         if(counter_mode1==1)
[e $ ! == -> _counter_mode1 `i -> 1 `i 110  ]
"254
[; ;main.c: 254:         {
{
"255
[; ;main.c: 255:             while(1)
[e :U 112 ]
"256
[; ;main.c: 256:             {
{
"257
[; ;main.c: 257:                 if(get_key_f==1)
[e $ ! == -> _get_key_f `i -> 1 `i 114  ]
"258
[; ;main.c: 258:                 {
{
"259
[; ;main.c: 259:                     key = KEYPAD_GetKey();
[e = _key ( _KEYPAD_GetKey ..  ]
"260
[; ;main.c: 260:                     get_key_f=0;
[e = _get_key_f -> -> 0 `i `uc ]
"261
[; ;main.c: 261:                     if((key>=0x30&&key<=0x39)||(key>=0x41&&key<=0x46))
[e $ ! || && >= -> _key `i -> 48 `i <= -> _key `i -> 57 `i && >= -> _key `i -> 65 `i <= -> _key `i -> 70 `i 115  ]
"262
[; ;main.c: 262:                     {
{
"263
[; ;main.c: 263:                         UART_TxChar(key);
[e ( _UART_TxChar (1 -> _key `uc ]
"264
[; ;main.c: 264:                         UART_TxChar('\r');
[e ( _UART_TxChar (1 -> -> 13 `ui `uc ]
"265
[; ;main.c: 265:                         UART_TxChar('\n');
[e ( _UART_TxChar (1 -> -> 10 `ui `uc ]
"266
[; ;main.c: 266:                     }
}
[e :U 115 ]
"267
[; ;main.c: 267:                 }
}
[e :U 114 ]
"269
[; ;main.c: 269:                 num = cnt;
[e = _num _cnt ]
"270
[; ;main.c: 270:                 temp = num / 10000;
[e = _temp -> / _num -> -> -> 10000 `i `l `ul `i ]
"271
[; ;main.c: 271:                 num = num % 10000;
[e = _num % _num -> -> -> 10000 `i `l `ul ]
"272
[; ;main.c: 272:                 PORTB = 0x02;
[e = _PORTB -> -> 2 `i `uc ]
"273
[; ;main.c: 273:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"274
[; ;main.c: 274:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"276
[; ;main.c: 276:                 temp = num / 1000;
[e = _temp -> / _num -> -> -> 1000 `i `l `ul `i ]
"277
[; ;main.c: 277:                 num = num % 1000;
[e = _num % _num -> -> -> 1000 `i `l `ul ]
"278
[; ;main.c: 278:                 PORTB = 0x04;
[e = _PORTB -> -> 4 `i `uc ]
"279
[; ;main.c: 279:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"280
[; ;main.c: 280:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"282
[; ;main.c: 282:                 temp = num / 100;
[e = _temp -> / _num -> -> -> 100 `i `l `ul `i ]
"283
[; ;main.c: 283:                 num = num % 100;
[e = _num % _num -> -> -> 100 `i `l `ul ]
"284
[; ;main.c: 284:                 PORTB = 0x08;
[e = _PORTB -> -> 8 `i `uc ]
"285
[; ;main.c: 285:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"286
[; ;main.c: 286:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"288
[; ;main.c: 288:                 temp = num / 10;
[e = _temp -> / _num -> -> -> 10 `i `l `ul `i ]
"289
[; ;main.c: 289:                 PORTB = 0x10;
[e = _PORTB -> -> 16 `i `uc ]
"290
[; ;main.c: 290:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"291
[; ;main.c: 291:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"293
[; ;main.c: 293:                 temp = num % 10;
[e = _temp -> % _num -> -> -> 10 `i `l `ul `i ]
"294
[; ;main.c: 294:                 PORTB = 0x20;
[e = _PORTB -> -> 32 `i `uc ]
"295
[; ;main.c: 295:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"296
[; ;main.c: 296:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"297
[; ;main.c: 297:                 if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 116  ]
"298
[; ;main.c: 298:                 {
{
"299
[; ;main.c: 299:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"300
[; ;main.c: 300:                     TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"301
[; ;main.c: 301:                     cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"302
[; ;main.c: 302:                     RE1=0;
[e = _RE1 -> -> 0 `i `b ]
"303
[; ;main.c: 303:                     RE0=0;
[e = _RE0 -> -> 0 `i `b ]
"304
[; ;main.c: 304:                     counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"305
[; ;main.c: 305:                     counter_mode2=0;
[e = _counter_mode2 -> -> 0 `i `uc ]
"306
[; ;main.c: 306:                     break;
[e $U 113  ]
"307
[; ;main.c: 307:                 }
}
[e :U 116 ]
"309
[; ;main.c: 309:             }
}
[e :U 111 ]
[e $U 112  ]
[e :U 113 ]
"310
[; ;main.c: 310:         }
}
[e :U 110 ]
"311
[; ;main.c: 311:         if(counter_mode2==1)
[e $ ! == -> _counter_mode2 `i -> 1 `i 117  ]
"312
[; ;main.c: 312:         {
{
"313
[; ;main.c: 313:             while(1)
[e :U 119 ]
"314
[; ;main.c: 314:             {
{
"315
[; ;main.c: 315:                 if(get_key_f==1)
[e $ ! == -> _get_key_f `i -> 1 `i 121  ]
"316
[; ;main.c: 316:                 {
{
"317
[; ;main.c: 317:                     key = KEYPAD_GetKey();
[e = _key ( _KEYPAD_GetKey ..  ]
"318
[; ;main.c: 318:                     get_key_f=0;
[e = _get_key_f -> -> 0 `i `uc ]
"319
[; ;main.c: 319:                     if((key>=0x30&&key<=0x39)||(key>=0x41&&key<=0x46))
[e $ ! || && >= -> _key `i -> 48 `i <= -> _key `i -> 57 `i && >= -> _key `i -> 65 `i <= -> _key `i -> 70 `i 122  ]
"320
[; ;main.c: 320:                     {
{
"321
[; ;main.c: 321:                         UART_TxChar(key);
[e ( _UART_TxChar (1 -> _key `uc ]
"322
[; ;main.c: 322:                         UART_TxChar('\r');
[e ( _UART_TxChar (1 -> -> 13 `ui `uc ]
"323
[; ;main.c: 323:                         UART_TxChar('\n');
[e ( _UART_TxChar (1 -> -> 10 `ui `uc ]
"324
[; ;main.c: 324:                     }
}
[e :U 122 ]
"325
[; ;main.c: 325:                 }
}
[e :U 121 ]
"327
[; ;main.c: 327:                 if(cnt>=set_cnt)
[e $ ! >= _cnt _set_cnt 123  ]
"328
[; ;main.c: 328:                 {
{
"330
[; ;main.c: 330:                     TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"331
[; ;main.c: 331:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"334
[; ;main.c: 334:                     set_cnt=0;
[e = _set_cnt -> -> -> 0 `i `l `ul ]
"335
[; ;main.c: 335:                     RE1=0;
[e = _RE1 -> -> 0 `i `b ]
"336
[; ;main.c: 336:                     RE0=0;
[e = _RE0 -> -> 0 `i `b ]
"337
[; ;main.c: 337:                     counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"338
[; ;main.c: 338:                     counter_mode2=0;
[e = _counter_mode2 -> -> 0 `i `uc ]
"339
[; ;main.c: 339:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"341
[; ;main.c: 341:                 }
}
[e :U 123 ]
"343
[; ;main.c: 343:                 num = cnt;
[e = _num _cnt ]
"344
[; ;main.c: 344:                 temp = num / 10000;
[e = _temp -> / _num -> -> -> 10000 `i `l `ul `i ]
"345
[; ;main.c: 345:                 num = num % 10000;
[e = _num % _num -> -> -> 10000 `i `l `ul ]
"346
[; ;main.c: 346:                 PORTB = 0x02;
[e = _PORTB -> -> 2 `i `uc ]
"347
[; ;main.c: 347:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"348
[; ;main.c: 348:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"350
[; ;main.c: 350:                 temp = num / 1000;
[e = _temp -> / _num -> -> -> 1000 `i `l `ul `i ]
"351
[; ;main.c: 351:                 num = num % 1000;
[e = _num % _num -> -> -> 1000 `i `l `ul ]
"352
[; ;main.c: 352:                 PORTB = 0x04;
[e = _PORTB -> -> 4 `i `uc ]
"353
[; ;main.c: 353:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"354
[; ;main.c: 354:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"356
[; ;main.c: 356:                 temp = num / 100;
[e = _temp -> / _num -> -> -> 100 `i `l `ul `i ]
"357
[; ;main.c: 357:                 num = num % 100;
[e = _num % _num -> -> -> 100 `i `l `ul ]
"358
[; ;main.c: 358:                 PORTB = 0x08;
[e = _PORTB -> -> 8 `i `uc ]
"359
[; ;main.c: 359:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"360
[; ;main.c: 360:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"362
[; ;main.c: 362:                 temp = num / 10;
[e = _temp -> / _num -> -> -> 10 `i `l `ul `i ]
"363
[; ;main.c: 363:                 PORTB = 0x10;
[e = _PORTB -> -> 16 `i `uc ]
"364
[; ;main.c: 364:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"365
[; ;main.c: 365:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"367
[; ;main.c: 367:                 temp = num % 10;
[e = _temp -> % _num -> -> -> 10 `i `l `ul `i ]
"368
[; ;main.c: 368:                 PORTB = 0x20;
[e = _PORTB -> -> 32 `i `uc ]
"369
[; ;main.c: 369:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"370
[; ;main.c: 370:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"371
[; ;main.c: 371:                 if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 124  ]
"372
[; ;main.c: 372:                 {
{
"373
[; ;main.c: 373:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"374
[; ;main.c: 374:                     INTCONbits.INTF=0;
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
"375
[; ;main.c: 375:                     TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"376
[; ;main.c: 376:                     cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"377
[; ;main.c: 377:                     set_cnt=0;
[e = _set_cnt -> -> -> 0 `i `l `ul ]
"378
[; ;main.c: 378:                     RE1=0;
[e = _RE1 -> -> 0 `i `b ]
"379
[; ;main.c: 379:                     RE0=0;
[e = _RE0 -> -> 0 `i `b ]
"380
[; ;main.c: 380:                     counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"381
[; ;main.c: 381:                     counter_mode2=0;
[e = _counter_mode2 -> -> 0 `i `uc ]
"382
[; ;main.c: 382:                     break;
[e $U 120  ]
"383
[; ;main.c: 383:                 }
}
[e :U 124 ]
"386
[; ;main.c: 386:             }
}
[e :U 118 ]
[e $U 119  ]
[e :U 120 ]
"387
[; ;main.c: 387:         }
}
[e :U 117 ]
"388
[; ;main.c: 388:         if(setval_mode==1)
[e $ ! == -> _setval_mode `i -> 1 `i 125  ]
"389
[; ;main.c: 389:         {
{
"390
[; ;main.c: 390:             while(1)
[e :U 127 ]
"391
[; ;main.c: 391:             {
{
"392
[; ;main.c: 392:                 if(get_key_f==1)
[e $ ! == -> _get_key_f `i -> 1 `i 129  ]
"393
[; ;main.c: 393:                 {
{
"394
[; ;main.c: 394:                     key = KEYPAD_GetKey();
[e = _key ( _KEYPAD_GetKey ..  ]
"395
[; ;main.c: 395:                     get_key_f=0;
[e = _get_key_f -> -> 0 `i `uc ]
"396
[; ;main.c: 396:                     if((key>=0x30&&key<=0x39)||(key>=0x41&&key<=0x46))
[e $ ! || && >= -> _key `i -> 48 `i <= -> _key `i -> 57 `i && >= -> _key `i -> 65 `i <= -> _key `i -> 70 `i 130  ]
"397
[; ;main.c: 397:                     {
{
"398
[; ;main.c: 398:                         UART_TxChar(key);
[e ( _UART_TxChar (1 -> _key `uc ]
"399
[; ;main.c: 399:                         UART_TxChar('\r');
[e ( _UART_TxChar (1 -> -> 13 `ui `uc ]
"400
[; ;main.c: 400:                         UART_TxChar('\n');
[e ( _UART_TxChar (1 -> -> 10 `ui `uc ]
"401
[; ;main.c: 401:                     }
}
[e :U 130 ]
"402
[; ;main.c: 402:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 131  ]
"403
[; ;main.c: 403:                     {
{
"404
[; ;main.c: 404:                         if(seg_set==1)
[e $ ! == _seg_set -> -> 1 `i `ui 132  ]
"405
[; ;main.c: 405:                         {}
{
}
[e $U 133  ]
"406
[; ;main.c: 406:                         else
[e :U 132 ]
"407
[; ;main.c: 407:                         seg_set--;
[e -- _seg_set -> -> 1 `i `ui ]
[e :U 133 ]
"408
[; ;main.c: 408:                     }
}
[e :U 131 ]
"409
[; ;main.c: 409:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 134  ]
"410
[; ;main.c: 410:                     {
{
"411
[; ;main.c: 411:                         if(seg_set==5)
[e $ ! == _seg_set -> -> 5 `i `ui 135  ]
"412
[; ;main.c: 412:                         {}
{
}
[e $U 136  ]
"413
[; ;main.c: 413:                         else
[e :U 135 ]
"414
[; ;main.c: 414:                         seg_set++;
[e ++ _seg_set -> -> 1 `i `ui ]
[e :U 136 ]
"415
[; ;main.c: 415:                     }
}
[e :U 134 ]
"416
[; ;main.c: 416:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 137  ]
"417
[; ;main.c: 417:                     {
{
"418
[; ;main.c: 418:                         if(seg_set==1)
[e $ ! == _seg_set -> -> 1 `i `ui 138  ]
"419
[; ;main.c: 419:                         {
{
"420
[; ;main.c: 420:                             if(set_cnt<99999)
[e $ ! < _set_cnt -> -> 99999 `l `ul 139  ]
"421
[; ;main.c: 421:                             set_cnt++;
[e ++ _set_cnt -> -> -> 1 `i `l `ul ]
[e :U 139 ]
"423
[; ;main.c: 423:                         }
}
[e :U 138 ]
"424
[; ;main.c: 424:                         if(seg_set==2)
[e $ ! == _seg_set -> -> 2 `i `ui 140  ]
"425
[; ;main.c: 425:                         {
{
"426
[; ;main.c: 426:                             if(set_cnt<99990)
[e $ ! < _set_cnt -> -> 99990 `l `ul 141  ]
"427
[; ;main.c: 427:                             set_cnt=set_cnt+10;
[e = _set_cnt + _set_cnt -> -> -> 10 `i `l `ul ]
[e :U 141 ]
"428
[; ;main.c: 428:                         }
}
[e :U 140 ]
"429
[; ;main.c: 429:                         if(seg_set==3)
[e $ ! == _seg_set -> -> 3 `i `ui 142  ]
"430
[; ;main.c: 430:                         {
{
"431
[; ;main.c: 431:                             if(set_cnt<99900)
[e $ ! < _set_cnt -> -> 99900 `l `ul 143  ]
"432
[; ;main.c: 432:                             set_cnt=set_cnt+100;
[e = _set_cnt + _set_cnt -> -> -> 100 `i `l `ul ]
[e :U 143 ]
"433
[; ;main.c: 433:                         }
}
[e :U 142 ]
"434
[; ;main.c: 434:                         if(seg_set==4)
[e $ ! == _seg_set -> -> 4 `i `ui 144  ]
"435
[; ;main.c: 435:                         {
{
"436
[; ;main.c: 436:                              if(set_cnt<99000)
[e $ ! < _set_cnt -> -> 99000 `l `ul 145  ]
"437
[; ;main.c: 437:                             set_cnt=set_cnt+1000;
[e = _set_cnt + _set_cnt -> -> -> 1000 `i `l `ul ]
[e :U 145 ]
"438
[; ;main.c: 438:                         }
}
[e :U 144 ]
"439
[; ;main.c: 439:                         if(seg_set==5)
[e $ ! == _seg_set -> -> 5 `i `ui 146  ]
"440
[; ;main.c: 440:                         {
{
"441
[; ;main.c: 441:                             if(set_cnt<90000)
[e $ ! < _set_cnt -> -> 90000 `l `ul 147  ]
"442
[; ;main.c: 442:                             set_cnt=set_cnt+10000;
[e = _set_cnt + _set_cnt -> -> -> 10000 `i `l `ul ]
[e :U 147 ]
"443
[; ;main.c: 443:                         }
}
[e :U 146 ]
"444
[; ;main.c: 444:                     }
}
[e :U 137 ]
"445
[; ;main.c: 445:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 148  ]
"446
[; ;main.c: 446:                     {
{
"447
[; ;main.c: 447:                         if(seg_set==1)
[e $ ! == _seg_set -> -> 1 `i `ui 149  ]
"448
[; ;main.c: 448:                         {
{
"449
[; ;main.c: 449:                             if(set_cnt>0)
[e $ ! > _set_cnt -> -> -> 0 `i `l `ul 150  ]
"450
[; ;main.c: 450:                             set_cnt--;
[e -- _set_cnt -> -> -> 1 `i `l `ul ]
[e $U 151  ]
"451
[; ;main.c: 451:                             else
[e :U 150 ]
"452
[; ;main.c: 452:                             {}
{
}
[e :U 151 ]
"453
[; ;main.c: 453:                         }
}
[e :U 149 ]
"454
[; ;main.c: 454:                         if(seg_set==2)
[e $ ! == _seg_set -> -> 2 `i `ui 152  ]
"455
[; ;main.c: 455:                         {
{
"456
[; ;main.c: 456:                             if(set_cnt>10)
[e $ ! > _set_cnt -> -> -> 10 `i `l `ul 153  ]
"457
[; ;main.c: 457:                             set_cnt=set_cnt-10;
[e = _set_cnt - _set_cnt -> -> -> 10 `i `l `ul ]
[e $U 154  ]
"458
[; ;main.c: 458:                             else
[e :U 153 ]
"459
[; ;main.c: 459:                             {}
{
}
[e :U 154 ]
"460
[; ;main.c: 460:                         }
}
[e :U 152 ]
"461
[; ;main.c: 461:                         if(seg_set==3)
[e $ ! == _seg_set -> -> 3 `i `ui 155  ]
"462
[; ;main.c: 462:                         {
{
"463
[; ;main.c: 463:                             if(set_cnt>100)
[e $ ! > _set_cnt -> -> -> 100 `i `l `ul 156  ]
"464
[; ;main.c: 464:                             set_cnt=set_cnt-100;
[e = _set_cnt - _set_cnt -> -> -> 100 `i `l `ul ]
[e :U 156 ]
"465
[; ;main.c: 465:                         }
}
[e :U 155 ]
"466
[; ;main.c: 466:                         if(seg_set==4)
[e $ ! == _seg_set -> -> 4 `i `ui 157  ]
"467
[; ;main.c: 467:                         {
{
"468
[; ;main.c: 468:                             if(set_cnt>1000)
[e $ ! > _set_cnt -> -> -> 1000 `i `l `ul 158  ]
"469
[; ;main.c: 469:                             set_cnt=set_cnt-1000;
[e = _set_cnt - _set_cnt -> -> -> 1000 `i `l `ul ]
[e :U 158 ]
"470
[; ;main.c: 470:                         }
}
[e :U 157 ]
"471
[; ;main.c: 471:                         if(seg_set==5)
[e $ ! == _seg_set -> -> 5 `i `ui 159  ]
"472
[; ;main.c: 472:                         {
{
"473
[; ;main.c: 473:                             if(set_cnt>10000)
[e $ ! > _set_cnt -> -> -> 10000 `i `l `ul 160  ]
"474
[; ;main.c: 474:                             set_cnt=set_cnt-10000;
[e = _set_cnt - _set_cnt -> -> -> 10000 `i `l `ul ]
[e :U 160 ]
"475
[; ;main.c: 475:                         }
}
[e :U 159 ]
"476
[; ;main.c: 476:                     }
}
[e :U 148 ]
"477
[; ;main.c: 477:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 161  ]
"478
[; ;main.c: 478:                     {
{
"479
[; ;main.c: 479:                         INTCONbits.INTE=1;
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
"480
[; ;main.c: 480:                         TRISBbits.TRISB0 =1;
[e = . . _TRISBbits 0 0 -> -> 1 `i `uc ]
"481
[; ;main.c: 481:                         cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"482
[; ;main.c: 482:                         RE1=1;
[e = _RE1 -> -> 1 `i `b ]
"483
[; ;main.c: 483:                         RE0=1;
[e = _RE0 -> -> 1 `i `b ]
"484
[; ;main.c: 484:                         counter_mode2=1;
[e = _counter_mode2 -> -> 1 `i `uc ]
"485
[; ;main.c: 485:                         counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"486
[; ;main.c: 486:                         setval_mode=0;
[e = _setval_mode -> -> 0 `i `uc ]
"487
[; ;main.c: 487:                         break;
[e $U 128  ]
"488
[; ;main.c: 488:                     }
}
[e :U 161 ]
"489
[; ;main.c: 489:                     if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 162  ]
"490
[; ;main.c: 490:                     {
{
"491
[; ;main.c: 491:                         INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"492
[; ;main.c: 492:                          TRISBbits.TRISB0 =0;
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
"493
[; ;main.c: 493:                         cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"494
[; ;main.c: 494:                         RE1=0;
[e = _RE1 -> -> 0 `i `b ]
"495
[; ;main.c: 495:                         RE0=0;
[e = _RE0 -> -> 0 `i `b ]
"496
[; ;main.c: 496:                         counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"497
[; ;main.c: 497:                         counter_mode2=0;
[e = _counter_mode2 -> -> 0 `i `uc ]
"498
[; ;main.c: 498:                         setval_mode=0;
[e = _setval_mode -> -> 0 `i `uc ]
"499
[; ;main.c: 499:                         break;
[e $U 128  ]
"500
[; ;main.c: 500:                     }
}
[e :U 162 ]
"501
[; ;main.c: 501:                 }
}
[e :U 129 ]
"503
[; ;main.c: 503:                 num = set_cnt;
[e = _num _set_cnt ]
"505
[; ;main.c: 505:                 temp = num / 10000;
[e = _temp -> / _num -> -> -> 10000 `i `l `ul `i ]
"506
[; ;main.c: 506:                 num = num % 10000;
[e = _num % _num -> -> -> 10000 `i `l `ul ]
"507
[; ;main.c: 507:                 if(blink_seg_f==1&&seg_set==5)
[e $ ! && == -> _blink_seg_f `i -> 1 `i == _seg_set -> -> 5 `i `ui 163  ]
"508
[; ;main.c: 508:                     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
[e $U 164  ]
"509
[; ;main.c: 509:                 else
[e :U 163 ]
"510
[; ;main.c: 510:                     PORTB = 0x02;
[e = _PORTB -> -> 2 `i `uc ]
[e :U 164 ]
"511
[; ;main.c: 511:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"512
[; ;main.c: 512:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"514
[; ;main.c: 514:                 temp = num / 1000;
[e = _temp -> / _num -> -> -> 1000 `i `l `ul `i ]
"515
[; ;main.c: 515:                 num = num % 1000;
[e = _num % _num -> -> -> 1000 `i `l `ul ]
"516
[; ;main.c: 516:                 if(blink_seg_f==1&&seg_set==4)
[e $ ! && == -> _blink_seg_f `i -> 1 `i == _seg_set -> -> 4 `i `ui 165  ]
"517
[; ;main.c: 517:                     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
[e $U 166  ]
"518
[; ;main.c: 518:                 else
[e :U 165 ]
"519
[; ;main.c: 519:                     PORTB = 0x04;
[e = _PORTB -> -> 4 `i `uc ]
[e :U 166 ]
"520
[; ;main.c: 520:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"521
[; ;main.c: 521:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"523
[; ;main.c: 523:                 temp = num / 100;
[e = _temp -> / _num -> -> -> 100 `i `l `ul `i ]
"524
[; ;main.c: 524:                 num = num % 100;
[e = _num % _num -> -> -> 100 `i `l `ul ]
"525
[; ;main.c: 525:                 if(blink_seg_f==1&&seg_set==3)
[e $ ! && == -> _blink_seg_f `i -> 1 `i == _seg_set -> -> 3 `i `ui 167  ]
"526
[; ;main.c: 526:                     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
[e $U 168  ]
"527
[; ;main.c: 527:                 else
[e :U 167 ]
"528
[; ;main.c: 528:                     PORTB = 0x08;
[e = _PORTB -> -> 8 `i `uc ]
[e :U 168 ]
"529
[; ;main.c: 529:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"530
[; ;main.c: 530:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"532
[; ;main.c: 532:                 temp = num / 10;
[e = _temp -> / _num -> -> -> 10 `i `l `ul `i ]
"533
[; ;main.c: 533:                 if(blink_seg_f==1&&seg_set==2)
[e $ ! && == -> _blink_seg_f `i -> 1 `i == _seg_set -> -> 2 `i `ui 169  ]
"534
[; ;main.c: 534:                     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
[e $U 170  ]
"535
[; ;main.c: 535:                 else
[e :U 169 ]
"536
[; ;main.c: 536:                     PORTB = 0x10;
[e = _PORTB -> -> 16 `i `uc ]
[e :U 170 ]
"537
[; ;main.c: 537:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"538
[; ;main.c: 538:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"540
[; ;main.c: 540:                 temp = num % 10;
[e = _temp -> % _num -> -> -> 10 `i `l `ul `i ]
"541
[; ;main.c: 541:                 if(blink_seg_f==1 &&seg_set==1)
[e $ ! && == -> _blink_seg_f `i -> 1 `i == _seg_set -> -> 1 `i `ui 171  ]
"542
[; ;main.c: 542:                     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
[e $U 172  ]
"543
[; ;main.c: 543:                 else
[e :U 171 ]
"544
[; ;main.c: 544:                     PORTB = 0x20;
[e = _PORTB -> -> 32 `i `uc ]
[e :U 172 ]
"546
[; ;main.c: 546:                 PORTD = seg_code[temp];
[e = _PORTD -> *U + &U _seg_code * -> -> _temp `ui `ux -> -> # *U &U _seg_code `ui `ux `uc ]
"547
[; ;main.c: 547:                 DELAY_ms1(1);
[e ( _DELAY_ms1 (1 -> -> 1 `i `ui ]
"549
[; ;main.c: 549:                 if(key=='3')
[e $ ! == -> _key `ui -> 51 `ui 173  ]
"550
[; ;main.c: 550:                 {
{
"551
[; ;main.c: 551:                     INTCONbits.INTE=0;
[e = . . _INTCONbits 0 4 -> -> 0 `i `uc ]
"552
[; ;main.c: 552:                     cnt=0;
[e = _cnt -> -> -> 0 `i `l `ul ]
"553
[; ;main.c: 553:                     GPIO_PinWrite(RE0,0x01u);
[e ( _GPIO_PinWrite (2 , -> _RE0 `E844 -> -> 1 `ui `uc ]
"554
[; ;main.c: 554:                     GPIO_PinWrite(RE1,0x01u);
[e ( _GPIO_PinWrite (2 , -> _RE1 `E844 -> -> 1 `ui `uc ]
"555
[; ;main.c: 555:                     counter_mode1=0;
[e = _counter_mode1 -> -> 0 `i `uc ]
"556
[; ;main.c: 556:                     counter_mode2=0;
[e = _counter_mode2 -> -> 0 `i `uc ]
"557
[; ;main.c: 557:                     break;
[e $U 128  ]
"558
[; ;main.c: 558:                 }
}
[e :U 173 ]
"560
[; ;main.c: 560:             }
}
[e :U 126 ]
[e $U 127  ]
[e :U 128 ]
"561
[; ;main.c: 561:         }
}
[e :U 125 ]
"562
[; ;main.c: 562:     }
}
[e :U 99 ]
[e $U 100  ]
[e :U 101 ]
"563
[; ;main.c: 563: }
[e :UE 98 ]
}
[v $root$_myIsr `(v ~T0 @X0 0 e ]
"565
[; ;main.c: 565: void __attribute__((picinterrupt(("")))) myIsr(void)
[v _myIsr `(v ~T1 @X0 1 ef ]
"566
[; ;main.c: 566: {
{
[e :U _myIsr ]
[f ]
"567
[; ;main.c: 567:     if(INTCONbits.INTF==1)
[e $ ! == -> . . _INTCONbits 0 1 `i -> 1 `i 175  ]
"568
[; ;main.c: 568:     {
{
"569
[; ;main.c: 569:         cnt++;
[e ++ _cnt -> -> -> 1 `i `l `ul ]
"570
[; ;main.c: 570:         INTCONbits.INTF=0;
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
"571
[; ;main.c: 571:     }
}
[e :U 175 ]
"572
[; ;main.c: 572:     if(INTCONbits.TMR0IF==1)
[e $ ! == -> . . _INTCONbits 1 1 `i -> 1 `i 176  ]
"573
[; ;main.c: 573:     {
{
"574
[; ;main.c: 574:         timer0_cnt++;
[e ++ _timer0_cnt -> -> 1 `i `ui ]
"575
[; ;main.c: 575:         seg_blink_cnt++;
[e ++ _seg_blink_cnt -> -> 1 `i `ui ]
"576
[; ;main.c: 576:         if(seg_blink_cnt>=50)
[e $ ! >= _seg_blink_cnt -> -> 50 `i `ui 177  ]
"577
[; ;main.c: 577:         {
{
"578
[; ;main.c: 578:             seg_blink_cnt=0;
[e = _seg_blink_cnt -> -> 0 `i `ui ]
"579
[; ;main.c: 579:             blink_seg_f=!blink_seg_f;
[e = _blink_seg_f -> -> ! != -> _blink_seg_f `i -> 0 `i `i `uc ]
"580
[; ;main.c: 580:         }
}
[e :U 177 ]
"582
[; ;main.c: 582:         if(timer0_cnt>=10)
[e $ ! >= _timer0_cnt -> -> 10 `i `ui 178  ]
"583
[; ;main.c: 583:         {
{
"584
[; ;main.c: 584:             timer0_cnt=0;
[e = _timer0_cnt -> -> 0 `i `ui ]
"585
[; ;main.c: 585:             get_key_f=1;
[e = _get_key_f -> -> 1 `i `uc ]
"586
[; ;main.c: 586:         }
}
[e :U 178 ]
"587
[; ;main.c: 587:         TMR0 = 101;
[e = _TMR0 -> -> 101 `i `uc ]
"588
[; ;main.c: 588:         INTCONbits.TMR0IF=0;
[e = . . _INTCONbits 1 1 -> -> 0 `i `uc ]
"589
[; ;main.c: 589:     }
}
[e :U 176 ]
"590
[; ;main.c: 590: }
[e :UE 174 ]
}
